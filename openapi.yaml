openapi: 3.0.1
info:
  title: NewformaApi
  version: v1
servers:
- url: http://localhost/NewformaApi
paths:
  /companies:
    get:
      tags:
      - Companies
      operationId: Companies_FilterCompanies
      parameters:
      - name: name
        in: query
        description: Name of the company
        schema:
          type: string
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[CompanyReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[CompanyReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - Companies
      operationId: Companies_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /companies/{companyId}:
    get:
      tags:
      - Companies
      operationId: Companies_GetCompanyById
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    put:
      tags:
      - Companies
      operationId: Companies_Update
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyUpdateRequestDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
    delete:
      tags:
      - Companies
      operationId: Companies_Delete
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /companies/{companyId}/officelocations:
    get:
      tags:
      - CompanyOfficeLocations
      operationId: CompanyOfficeLocations_GetByFilter
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[OfficeLocationReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[OfficeLocationReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - CompanyOfficeLocations
      operationId: CompanyOfficeLocations_Create
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeLocationCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/OfficeLocationCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OfficeLocationCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /companies/{companyId}/officelocations/{officeLocationId}:
    get:
      tags:
      - CompanyOfficeLocations
      operationId: CompanyOfficeLocations_GetById
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      - name: officeLocationId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeLocationDto'
            text/json:
              schema:
                $ref: '#/components/schemas/OfficeLocationDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    put:
      tags:
      - CompanyOfficeLocations
      operationId: CompanyOfficeLocations_Update
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      - name: officeLocationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeLocationUpdateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/OfficeLocationUpdateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OfficeLocationUpdateRequestDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
    delete:
      tags:
      - CompanyOfficeLocations
      operationId: CompanyOfficeLocations_Delete
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      - name: officeLocationId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /contacts:
    get:
      tags:
      - Contacts
      operationId: Contacts_FilterContacts
      parameters:
      - name: emailAddress
        in: query
        description: Must match typical email address form
        schema:
          type: string
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ContactReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ContactReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - Contacts
      operationId: Contacts_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /contacts/{contactId}:
    get:
      tags:
      - Contacts
      operationId: Contacts_GetContactById
      parameters:
      - name: contactId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    put:
      tags:
      - Contacts
      operationId: Contacts_Update
      parameters:
      - name: contactId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactUpdateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactUpdateRequestDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
    delete:
      tags:
      - Contacts
      operationId: Contacts_Delete
      parameters:
      - name: contactId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /edmsPlugins:
    get:
      tags:
      - EdmsPlugins
      operationId: EdmsPlugins_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdmsPluginsResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/EdmsPluginsResponseDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        500:
          description: InternalServerError
          content: {}
  /health:
    get:
      tags:
      - Health
      operationId: Health_GetHealth
      responses:
        200:
          description: Result code telling you whether or not the system is healthy.
          content: {}
  /projects/{projectId}/keywordlistassignments/{listAssignmentType}:
    get:
      tags:
      - KeywordListAssignments
      summary: Gets the keyword list name for the specified type assigned to the specified
        project.
      operationId: KeywordListAssignments_GetByType
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: listAssignmentType
        in: path
        description: Specifies the keyword list. Use snake_case, for example, uac_submittal_action_list
        required: true
        schema:
          type: string
          enum:
          - action_item_discipline
          - action_item_keywords
          - action_item_status
          - action_item_type
          - addendum_action_list
          - addendum_discipline_list
          - addendum_keyword_list
          - addendum_reasons_list
          - addendum_types_list
          - addendum_workflow_status
          - asi_action_list
          - asi_discipline_list
          - asi_keyword_list
          - asi_reasons_list
          - asi_types_list
          - asi_workflow_status
          - bim_element_keywords
          - bim_model_discipline
          - bim_model_keywords
          - bulletin_action_list
          - bulletin_ccd_sum_type_list
          - bulletin_cop_status_list
          - bulletin_discipline_list
          - bulletin_keyword_list
          - bulletin_reasons_list
          - bulletin_types_list
          - bulletin_workflow_status
          - ccd_action_list
          - ccd_cop_status_list
          - ccd_discipline_list
          - ccd_keyword_list
          - ccd_reasons_list
          - ccd_sum_type_list
          - ccd_workflow_status
          - change_order_action_list
          - change_order_discipline_list
          - change_order_keyword_list
          - change_order_proposal_action_list
          - change_order_proposal_discipline_list
          - change_order_proposal_keyword_list
          - change_order_proposal_reasons_list
          - change_order_proposal_workflow_status
          - change_order_reasons_list
          - change_order_workflow_status
          - contract_action_list
          - contract_discipline_list
          - contract_keyword_list
          - contract_terms_list
          - contract_type_contractor_list
          - contract_workflow_status
          - daily_report_equipment_list
          - daily_report_keyword_list
          - daily_report_observations_category
          - daily_report_status
          - daily_report_subcontractor_discipline
          - discussion_actions
          - document_control_discipline
          - document_control_keywords
          - document_control_purposes
          - document_control_scales
          - document_control_sizes
          - document_control_types
          - document_set_keywords
          - document_set_status
          - event_keywords
          - field_note_keyword_list
          - markup_session_keywords
          - markup_session_status
          - markup_status_list
          - model_view_keywords
          - pco_keyword_list
          - pco_reasons_list
          - pco_status_list
          - pco_types_list
          - physical_transfer_methods
          - priority_list
          - project_email_keywords
          - project_file_keywords
          - proposal_request_action_list
          - proposal_request_cop_status_list
          - proposal_request_discipline_list
          - proposal_request_keyword_list
          - proposal_request_reasons_list
          - proposal_request_workflow_status
          - punch_list_disciplines
          - punch_list_keywords
          - punch_list_locations
          - punch_list_purposes
          - punch_list_spec_sections
          - punch_list_status
          - punch_list_types
          - record_document_package_status
          - record_document_revision_states
          - record_document_status
          - rfi_action_list
          - rfi_discipline_list
          - rfi_keyword_list
          - rfi_reasons_list
          - rfi_types_list
          - rfi_workflow_status
          - site_visit_keyword_list
          - site_visit_observations_category
          - site_visit_status_list
          - site_visit_type
          - sketch_discipline_list
          - sketch_keyword_list
          - sketch_reasons_list
          - sketch_status_list
          - sketch_types_list
          - space_keywords
          - submittal_action_list
          - submittal_discipline_list
          - submittal_keyword_list
          - submittal_spec_section_list
          - submittal_workflow_status
          - transmittal_keywords
          - transmittal_purposes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordListAssignmentDto'
            text/json:
              schema:
                $ref: '#/components/schemas/KeywordListAssignmentDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No assignment
            found with the specified list assignment type
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/keywordlists:
    get:
      tags:
      - KeywordListAssignments
      summary: Gets the single/muliple keyword lists for the specified types assigned
        to the specified project
      operationId: KeywordListAssignments_GetByKewordListType
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: This representing the keyword list assignment type assigned for
          a project
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - action_item_discipline
            - action_item_keywords
            - action_item_status
            - action_item_type
            - action_item_priority_list
            - addendum_action_list
            - addendum_discipline_list
            - addendum_keyword_list
            - addendum_reasons_list
            - addendum_types_list
            - addendum_workflow_status
            - asi_action_list
            - asi_discipline_list
            - asi_keyword_list
            - asi_reasons_list
            - asi_types_list
            - asi_workflow_status
            - bim_element_keywords
            - bim_model_discipline
            - bim_model_keywords
            - bulletin_action_list
            - bulletin_ccd_sum_type_list
            - bulletin_cop_status_list
            - bulletin_discipline_list
            - bulletin_keyword_list
            - bulletin_reasons_list
            - bulletin_types_list
            - bulletin_workflow_status
            - ccd_action_list
            - ccd_cop_status_list
            - ccd_discipline_list
            - ccd_keyword_list
            - ccd_reasons_list
            - ccd_sum_type_list
            - ccd_workflow_status
            - change_order_action_list
            - change_order_discipline_list
            - change_order_keyword_list
            - change_order_reasons_list
            - change_order_workflow_status
            - change_order_proposal_action_list
            - change_order_proposal_discipline_list
            - change_order_proposal_keyword_list
            - change_order_proposal_reasons_list
            - change_order_proposal_workflow_status
            - contract_action_list
            - contract_discipline_list
            - contract_keyword_list
            - contract_terms_list
            - contract_type_contractor_list
            - contract_workflow_status
            - daily_report_equipment_list
            - daily_report_keyword_list
            - daily_report_observations_category
            - daily_report_status
            - daily_report_subcontractor_discipline
            - discussion_actions
            - document_control_discipline
            - document_control_keywords
            - document_control_purposes
            - document_control_scales
            - document_control_sizes
            - document_control_types
            - record_document_package_status
            - record_document_revision_states
            - record_document_status
            - document_set_keywords
            - document_set_status
            - event_keywords
            - field_notes_keyword_list
            - markup_session_keywords
            - markup_session_status
            - markup_status_list
            - model_view_keywords
            - pco_keyword_list
            - pco_reasons_list
            - pco_status_list
            - pco_types_list
            - physical_transfer_methods
            - project_email_keywords
            - project_file_keywords
            - proposal_request_action_list
            - proposal_request_cop_status_list
            - proposal_request_discipline_list
            - proposal_request_keyword_list
            - proposal_request_reasons_list
            - proposal_request_workflow_status
            - punch_list_disciplines
            - punch_list_keywords
            - punch_list_locations
            - punch_list_purposes
            - punch_list_spec_sections
            - punch_list_status
            - punch_list_types
            - rfi_action_list
            - rfi_discipline_list
            - rfi_keyword_list
            - rfi_reasons_list
            - rfi_types_list
            - rfi_workflow_status
            - site_visit_keyword_list
            - site_visit_observations_category
            - site_visit_status_list
            - site_visit_type
            - sketch_discipline_list
            - sketch_keyword_list
            - sketch_reasons_list
            - sketch_status_list
            - sketch_types_list
            - space_keywords
            - submittal_action_list
            - submittal_discipline_list
            - submittal_keyword_list
            - submittal_spec_section_list
            - submittal_workflow_status
            - transmittal_keywords
            - transmittal_purposes
            - action_items
            - addendums
            - supplemental_instructions
            - bim
            - bulletins
            - contruction_change_directives
            - change_orders
            - change_order_proposals
            - contracts
            - daily_reports
            - document_control
            - document_set
            - markup_session
            - markup_status
            - potential_change_orders
            - project
            - proposal_requests
            - punch_list
            - rfis
            - site_visits
            - sketches_and_supplemental_drawings
            - submittals
            - transmittals
            - field_notes
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[KeywordListsResponseDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[KeywordListsResponseDto]'
        400:
          description: Cannot process the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
  /keywordlists/{keywordListId}:
    get:
      tags:
      - Keywords
      summary: Gets a specified keyword list.
      operationId: Keywords_GetListById
      parameters:
      - name: keywordListId
        in: path
        description: Identifies the keyword list (GUID)
        required: true
        schema:
          type: string
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordListDto[String]'
            text/json:
              schema:
                $ref: '#/components/schemas/KeywordListDto[String]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No keyword list found with the specified keyword list ID, The
            requested page was not found (using offsetToken)
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/companyroles/{projectCompanyRoleId}:
    get:
      tags:
      - ProjectCompanyRoles
      operationId: ProjectCompanyRoles_GetById
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: projectCompanyRoleId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCompanyRoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectCompanyRoleDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    delete:
      tags:
      - ProjectCompanyRoles
      operationId: ProjectCompanyRoles_Delete
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: projectCompanyRoleId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/companyroles:
    get:
      tags:
      - ProjectCompanyRoles
      operationId: ProjectCompanyRoles_Get
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCompanyRoleListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectCompanyRoleListResponse'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - ProjectCompanyRoles
      operationId: ProjectCompanyRoles_Create
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCompanyRoleCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectCompanyRoleCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCompanyRoleCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /projects/{projectId}/folders:
    get:
      tags:
      - ProjectFolders
      operationId: ProjectFolders_Get
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFoldersResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectFoldersResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}:
    get:
      tags:
      - Projects
      operationId: Projects_GetById
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    put:
      tags:
      - Projects
      operationId: Projects_Update
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequestDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
    delete:
      tags:
      - Projects
      operationId: Projects_Delete
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/serverName:
    get:
      tags:
      - Projects
      operationId: Projects_GetServerName
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects:
    get:
      tags:
      - Projects
      operationId: Projects_GetByFilter
      parameters:
      - name: name
        in: query
        schema:
          type: string
      - name: number
        in: query
        schema:
          type: string
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ProjectReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ProjectReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - Projects
      operationId: Projects_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /projects/settings:
    get:
      tags:
      - Projects
      summary: Gets a list of project settings information for requested projectIds
      operationId: Projects_GetProjectSettingById
      parameters:
      - name: projectIds
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettingsResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectSettingsResponseDto'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{projectId}/teammembers:
    get:
      tags:
      - ProjectTeamMembers
      operationId: ProjectTeamMembers_FilterProjectTeamMembers
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: groupIds
        in: query
        schema:
          type: string
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ProjectTeamMemberRefDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[ProjectTeamMemberRefDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - ProjectTeamMembers
      operationId: ProjectTeamMembers_Create
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberCreateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberCreateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberCreateRequestDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: projectTeamMemberCreateRequestDto
  /projects/{projectId}/teammembers/{projectTeamMemberId}:
    get:
      tags:
      - ProjectTeamMembers
      operationId: ProjectTeamMembers_GetProjectTeamMemberById
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: projectTeamMemberId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTeamMemberDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectTeamMemberDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
    put:
      tags:
      - ProjectTeamMembers
      operationId: ProjectTeamMembers_Update
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: projectTeamMemberId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberUpdateRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberUpdateRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTeamMemberUpdateRequestDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: projectTeamMemberUpdateDto
    delete:
      tags:
      - ProjectTeamMembers
      operationId: ProjectTeamMembers_Delete
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: projectTeamMemberId
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/punchlistitems/{punchListItemId}:
    get:
      tags:
      - PunchListItems
      summary: Gets detailed information about a Punch List Item.
      operationId: PunchListItems_GetById
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: punchListItemId
        in: path
        description: Identifies the punch list item (GUID)
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PunchListItemResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PunchListItemResponseDto'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: '{Parameter} not found: {parameter value}'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - PunchListItems
      summary: Delete a punch list item by punchListItemId in a specific project
      operationId: PunchListItems_Delete
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: punchListItemId
        in: path
        description: Identifies the punch list item (GUID)
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - PunchListItems
      summary: Modify the existing punch list item associated with the project
      operationId: PunchListItems_Update
      parameters:
      - name: projectId
        in: path
        required: true
        schema: {}
      - name: punchListItemId
        in: path
        required: true
        schema: {}
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ModifyPunchListItemDtoExample'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: model
  /projects/{projectId}/punchlistitems:
    get:
      tags:
      - PunchListItems
      summary: Gets a list of filtered Punch List items to be returned for a specific
        project
      operationId: PunchListItems_GetByFilter
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: punchListItemId
        in: query
        description: Identifies the punch list item (GUID).
        schema:
          type: string
      - name: id
        in: query
        description: The ID number of the punch list.
        schema:
          type: string
      - name: spaceItem.spaceId
        in: query
        description: The space / spatial index item id the punch list is related.
        schema:
          type: string
      - name: spaceItem.name
        in: query
        description: The space / spatial index item name the punch list is related.
        schema:
          type: string
      - name: spaceItem.number
        in: query
        description: The space / spatial index item number the punch list is related.
        schema:
          type: string
      - name: type.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: type.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - generic
      - name: discipline.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: discipline.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - generic
      - name: purpose.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: purpose.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - generic
      - name: status.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: status.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - Draft
          - Open
          - Closed
          - Void
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: assignedTo
        in: query
        description: The project team members the punch list is assigned to. Identifies
          the project (GUID).
        schema:
          type: string
      - name: specSection.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: specSection.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - generic
      - name: lastAction.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: lastAction.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - Completed
          - Approved
          - Rejected
          - Comment
      - name: lastModifiedDate
        in: query
        description: 'The last modified date of punch list item. Supported ISO 8601
          formats without milliseconds: `YYYY-MM-DDThh:mm:ssZ`, `YYYY-MM-DDThh:mm:ssZ`,
          `YYYY-MM-DDThh:mm:ss+hh:mm`, `YYYY-MM-DDThh:mm:ss-hh:mm`, `YYYY-MM-DDThh:mm:ss+hh:mm`,
          `YYYY-MM-DDThh:mm:ss-hh:mm`. Requested date time will be converted to UTC
          date time, examples: `2022-05-05T10:00:00Z` - `2022-05-05 10:00:00`, `2022-05-05T10:00:00+02:00`
          - `2022-05-05 08:00:00`, `2022-05-05T10:00:00-02:00` - `2022-05-05 12:00:00`.
          Converter assumes that the date sent will be a local time with the time
          difference of the timezone (time zone difference included in requested date).
          If there is no difference `Z`, it assumes that it is `00:00`.'
        schema:
          type: string
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[PunchListItemsResponseDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[PunchListItemsResponseDto]'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: '{Parameter} not found: {parameter value}'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - PunchListItems
      summary: Creates a Punch List Item within the specified project.
      operationId: PunchListItems_Create
      parameters:
      - name: projectId
        in: path
        required: true
        schema: {}
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreatePunchListItemDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content: {}
        409:
          description: A punchlist item with the same source already exists or a punchlist
            item with the same id already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: model
  /projects/{projectId}/recorddocuments/extendedproperties:
    get:
      tags:
      - RecordDocuments
      summary: This endpoint responds with the list of user defined extended record
        document properties for the project.
      operationId: RecordDocuments_GetRecordDocumentExtendedPropertiesList
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedPropertiesGroupDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedPropertiesGroupDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/issueddocuments/{itemId}:
    get:
      tags:
      - RecordDocuments
      summary: "When the itemId is for a record document the record document and all\
        \ of its issued revisions will be returned. When the itemId is for a record\
        \ document revision the record document and only the associated revision will\
        \ be returned.\r\nThe ContentFormat property is used to control which format\
        \ (default = RTF,Text,HTML) the contents of the Description field is returned."
      operationId: RecordDocuments_GetIssuedDocumentRevisions
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
          format: uuid
      - name: itemId
        in: path
        description: When the itemId is for a record document the record document
          and all of its issued revisions will be returned. When the itemId is for
          a record document revision the record document and only the associated revision
          will be returned
        required: true
        schema:
          type: string
          format: uuid
      - name: contentFormatType
        in: query
        description: Identifies the desired format to return for formatted text fields.
          By default the text will be returned as it exists in the database.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordDocumentDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RecordDocumentDetailsDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/issueddocuments/{recordDocumentId}/revisions/{recordDocumentRevisionId}:
    get:
      tags:
      - RecordDocuments
      summary: "This endpoint responds with the requested revision for an issued record\
        \ document.\r\nThe ContentFormat property is used to control which format\
        \ (default = RTF,Text,HTML) the contents of the Description field is returned."
      operationId: RecordDocuments_GetSpecificIssuedDocumentRevision
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
          format: uuid
      - name: recordDocumentId
        in: path
        description: Identifies the record document within this project (GUID)
        required: true
        schema:
          type: string
          format: uuid
      - name: recordDocumentRevisionId
        in: path
        description: Identifies the specific revision of the record document to return
        required: true
        schema:
          type: string
          format: uuid
      - name: contentFormatType
        in: query
        description: Identifies the desired format to return for formatted text fields.
          By default the text will be returned as it exists in the database.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordDocumentDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RecordDocumentDetailsDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/issueddocuments:
    get:
      tags:
      - RecordDocuments
      summary: "This endpoint responds with the list of active issued record documents\
        \ for the project and only returns the most recent revision for each document.\r\
        \nIt is filterable by last modified date, and accepts a paging size.\r\nThe\
        \ ContentFormat property is used to control which format (default = RTF,Text,HTML)\
        \ the contents of the Description field is returned."
      operationId: RecordDocuments_GeIssuedDocuments
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: contentFormatType
        in: query
        description: This controls how the content of the Description field is returned.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[RecordDocumentDetailsDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[RecordDocumentDetailsDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/rfis:
    get:
      tags:
      - Rfis
      summary: Gets a list of project rfis.
      operationId: Rfis_GetByFilter
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: Filters the result to include only items with this value as the
          Subject
        schema:
          type: string
      - name: projectItemNumber
        in: query
        description: Filters the result to include only items with this value as the
          Number or ID
        schema:
          type: string
      - name: status.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: status.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - closed
          - draft
          - expected
          - open
          - pending
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        description: Filters the result to include only those items modified since
          the given date/time (in UTC)
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[RfiReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[RfiReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, The requested
            page was not found (using offsetToken)
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - Rfis
      summary: Creates a pending or expected rfi within the specified project.
      operationId: Rfis_Create
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      requestBody:
        description: The rfi data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRfiDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRfiDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRfiDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        409:
          description: A rfi with the same source already exists
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /projects/{projectId}/rfis/{rfiId}:
    get:
      tags:
      - Rfis
      summary: Gets a specific project rfi
      operationId: Rfis_GetById
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: rfiId
        in: path
        description: Identifies the rfi within this project (GUID)
        required: true
        schema:
          type: string
      - name: contentFormatType
        in: query
        description: Identifies the desired format to return for formatted text fields.
          By default the text will be returned as it exists in the database.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfiDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RfiDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No Rfi found
            with the specified rfi ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/rfis/{rfiId}/reopen:
    put:
      tags:
      - Rfis
      summary: Change the workflow status of a closed RFI to open
      operationId: Rfis_PutReopenClosed
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: rfiId
        in: path
        description: Identifies the rfi within this project (GUID)
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericReopenDto'
          text/json:
            schema:
              $ref: '#/components/schemas/GenericReopenDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenericReopenDto'
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No Rfi found
            with the specified rfi ID, etc.
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: genericReopenDto
  /projects/{projectId}/rfis/{rfiId}/external_workflows:
    post:
      tags:
      - Rfis
      summary: Add an event to the RFI Change Log
      operationId: Rfis_PostExternalWorkflows
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: rfiId
        in: path
        description: Identifies the rfi within this project (GUID)
        required: true
        schema:
          type: string
      requestBody:
        description: valid values for event are 'delivered' or 'error'. A message
          must be provided
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
          text/json:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No Rfi found
            with the specified rfi ID, etc.
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /search:
    post:
      tags:
      - Search
      operationId: Search_Get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchRequestDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchRequestDto'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResponseDto[SearchResponseDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/PagedResponseDto[SearchResponseDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: NotFound
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: requestDto
  /projects/{projectId}/spaces:
    get:
      tags:
      - Spaces
      summary: This endpoint used to get list of spaces for the project
      operationId: Spaces_GetByFilter
      parameters:
      - name: projectId
        in: path
        description: Identifies the project(GUID)
        required: true
        schema:
          type: string
      - name: spaceId
        in: query
        description: Identifies the space (GUID).
        schema:
          type: string
      - name: name
        in: query
        description: Identifies the space name.
        schema:
          type: string
      - name: number
        in: query
        description: Identifies the space number .
        schema:
          type: string
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[SpaceItemDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[SpaceItemDto]'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Spaces
      summary: This endpoint used to create space for a project
      operationId: Spaces_Create
      parameters:
      - name: projectId
        in: path
        required: true
        schema: {}
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSpaceDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: A space with the same source already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: model
  /projects/{projectId}/spaces/{spaceId}:
    delete:
      tags:
      - Spaces
      summary: Deletes the existing space within the project
      operationId: Spaces_Delete
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: spaceId
        in: path
        description: Identifies the space (GUID)
        required: true
        schema:
          type: string
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: Cannot process the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
            text/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        404:
          description: Not found project ID or space ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Spaces
      summary: Modify the existing space related information for specified space associated
        with the project
      operationId: Spaces_Update
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: spaceId
        in: path
        description: Identifies the space (GUID)
        required: true
        schema:
          type: string
      requestBody:
        description: ModifySpaceDto which contains space related properties where
          the user send the space data to modify.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySpaceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ModifySpaceDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModifySpaceDto'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
        400:
          description: Cannot process the request because it is malformed or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResultModel'
        401:
          description: You are not licensed to use this feature.
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: No project found with the specified project ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: model
  /projects/{projectId}/submittals:
    get:
      tags:
      - Submittals
      summary: Gets a list of project submittals.
      operationId: Submittals_GetByFilter
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: Filters the result to include only items with this value as the
          Subject
        schema:
          type: string
      - name: projectItemNumber
        in: query
        description: Filters the result to include only items with this value as the
          Number or ID
        schema:
          type: string
      - name: status.name
        in: query
        description: "Represents the default or user defined name of the keyword.\r\
          \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
          \ column."
        schema:
          type: string
      - name: status.type
        in: query
        description: "Represents the type of the keyword.\r\nThis corresponds to the\
          \ Project Center keyword list dialog's \"Type\" column."
        schema:
          type: string
          enum:
          - closed
          - draft
          - expected
          - open
          - pending
      - name: source.sourcePrimaryKey
        in: query
        description: The identifier of data object in the third-party system. May
          be any string or serialized object as defined by the third-party system.
        schema:
          type: string
      - name: source.sourceDescriptor
        in: query
        description: A short descriptive (human-readable) name of the third-party
          system or subsystem.
        schema:
          type: string
      - name: lastModifiedUtc
        in: query
        description: Filters the result to include only those items modified since
          the given date/time (in UTC)
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[SubmittalReferenceDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[SubmittalReferenceDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, The requested
            page was not found (using offsetToken)
          content: {}
        500:
          description: InternalServerError
          content: {}
    post:
      tags:
      - Submittals
      summary: Creates a pending or expected submittal within the specified project.
      operationId: Submittals_Create
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      requestBody:
        description: The submittal data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmittalDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubmittalDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSubmittalDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateResponseDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        409:
          description: A submittal with the same source already exists
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /projects/{projectId}/submittals/{submittalId}:
    get:
      tags:
      - Submittals
      summary: Gets a specific project submittal
      operationId: Submittals_GetById
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: submittalId
        in: path
        description: Identifies the submittal within this project (GUID)
        required: true
        schema:
          type: string
      - name: contentFormatType
        in: query
        description: Identifies the desired format to return for formatted text fields.
          By default the text will be returned as it exists in the database.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittalDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubmittalDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No Submittal
            found with the specified submittal ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/submittals/{submittalId}/external_workflows:
    post:
      tags:
      - Submittals
      summary: Add an event to the Submittal Change Log
      operationId: Submittals_PostExternalWorkflows
      parameters:
      - name: projectId
        in: path
        description: Identifies the project (GUID)
        required: true
        schema:
          type: string
      - name: submittalId
        in: path
        description: Identifies the submittal within this project (GUID)
        required: true
        schema:
          type: string
      requestBody:
        description: Valid values for event are 'delivered' or 'error'.  A message
          must be provided
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
          text/json:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenericExternalWorkflowDto'
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No Submittal
            found with the specified ID, etc.
          content: {}
        500:
          description: InternalServerError
          content: {}
      x-codegen-request-body-name: model
  /projects/{projectId}/transmittals/{transmittalId}:
    get:
      tags:
      - Transmittals
      summary: "Get by transmittalId is used to get the details about a given transmittal.\
        \ This endpoint\r\ncan be used to gather the details of a given transmittal\
        \ id that was returned by the\r\nGET /projects/{projectId}/submittals/{submittalId}."
      operationId: Transmittals_GetById
      parameters:
      - name: projectId
        in: path
        description: The Project ID, a GUID
        required: true
        schema:
          type: string
          format: uuid
      - name: transmittalId
        in: path
        description: The Transmittal ID, a GUID
        required: true
        schema:
          type: string
          format: uuid
      - name: contentFormatType
        in: query
        description: Identifies the desired format to return for formatted text fields.
          By default the text will be returned as it exists in the database.
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransmittalDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TransmittalDetailsDto'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID, No transmittal
            found with the specified transmittal ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /projects/{projectId}/transmittals:
    get:
      tags:
      - Transmittals
      summary: "This endpoint provides the ability to retrieve a list of Transmittals\
        \ for a project.\r\nIt provides the ability to optionally filter this list\
        \ by last modified date and if\r\nthe transmittal was for issuing a record\
        \ document."
      operationId: Transmittals_GetByLastModifiedAndRelatedItem
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: contentFormatType
        in: query
        schema:
          type: string
          enum:
          - Default
          - HTML
          - RTF
          - Text
      - name: relatedItemTypeFilter
        in: query
        schema:
          type: string
          enum:
          - ProjectItemToIssue
      - name: lastModifiedUtc
        in: query
        schema:
          type: string
          format: date-time
      - name: paging.offsetToken
        in: query
        description: The token returned in a previous paged response or empty string
          for the first page of results
        schema:
          type: string
      - name: paging.maxSize
        in: query
        description: The maximum number of items to return in this request
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[TransmittalDetailsDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/FilterResponseDto[TransmittalDetailsDto]'
        400:
          description: BadRequest
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: No project found with the specified project ID
          content: {}
        500:
          description: InternalServerError
          content: {}
  /me:
    get:
      tags:
      - User
      summary: Retrieves contact information about the current Project Center user.
      operationId: User_GetCurrentUser
      responses:
        200:
          description: The current user's NPC contact information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            text/json:
              schema:
                $ref: '#/components/schemas/Contact'
        403:
          description: User is not licensed for Project Center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
  /version:
    get:
      tags:
      - Version
      summary: Gets version information about this server.
      operationId: Version_GetVersionInfo
      responses:
        200:
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewformaVersionInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/NewformaVersionInfo'
        404:
          description: Installation is corrupt.
          content: {}
components:
  schemas:
    CompanyFilterRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the company
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
    SourceInfoDto:
      required:
      - sourceDescriptor
      - sourcePrimaryKey
      type: object
      properties:
        sourcePrimaryKey:
          type: string
          description: The identifier of data object in the third-party system. May
            be any string or serialized object as defined by the third-party system.
        sourceDescriptor:
          type: string
          description: A short descriptive (human-readable) name of the third-party
            system or subsystem.
      description: "Useful when synchronizing data into Newforma from a third-party\
        \ system,\r\nthe source information links the information stored in Newforma\
        \ with that originating in the third-party system."
    PagingRequest:
      type: object
      properties:
        offsetToken:
          type: string
          description: The token returned in a previous paged response or empty string
            for the first page of results
        maxSize:
          type: integer
          description: The maximum number of items to return in this request
          format: int32
    FilterResponseDto[CompanyReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/CompanyReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    CompanyReferenceDto:
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID) of the company
        name:
          type: string
          description: Name of the company
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    CompanyCreateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the company
        mainContactId:
          type: string
          description: The main contact
        disciplines:
          type: array
          description: List of disciplines associated with this company from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        specSections:
          type: array
          description: List of MasterFormat™ specification section numbers
          items:
            type: string
        companyType:
          type: string
          description: The type of company from the Global Company Type List, e.g.,
            "Architects", "Engineer"
        webUrl:
          type: string
          description: Web address of the company
        notes:
          type: string
          description: Notes about the company (in HTML)
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    CreateResponseDto:
      type: object
      properties:
        id:
          type: string
          description: The identifier (typically a GUID) of the newly created entity
    CompanyDto:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID) of the company
        name:
          type: string
          description: Name of the company
        mainContactId:
          type: string
          description: The main contact
        disciplines:
          type: array
          description: List of disciplines associated with this company from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        specSections:
          type: array
          description: List of MasterFormat™ specification section numbers
          items:
            type: string
        companyType:
          type: string
          description: The type of company from the Global Company Type List, e.g.,
            "Architects", "Engineer"
        webUrl:
          type: string
          description: Web address of the company
        notes:
          type: string
          description: Notes about the company (in HTML)
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    CompanyUpdateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the company
        mainContactId:
          type: string
          description: The main contact
        disciplines:
          type: array
          description: List of disciplines associated with this company from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        specSections:
          type: array
          description: List of MasterFormat™ specification section numbers
          items:
            type: string
        companyType:
          type: string
          description: The type of company from the Global Company Type List, e.g.,
            "Architects", "Engineer"
        webUrl:
          type: string
          description: Web address of the company
        notes:
          type: string
          description: Notes about the company (in HTML)
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    OfficeLocationFilterRequestDto:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[OfficeLocationReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/OfficeLocationReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    OfficeLocationReferenceDto:
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID) for the office location reference
        name:
          type: string
          description: Name of this location
        isPrimary:
          type: boolean
          description: Indicates whether or not this location is the default for this
            company. If true the existing primary office location will be set to false
        address:
          $ref: '#/components/schemas/AddressDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
      description: Location associated with a company
    AddressDto:
      type: object
      properties:
        addressType:
          type: string
          description: Type of the address from one of the values in the Global Address
            Types List, e.g., "Mailing", "Office", "Job Site"
        street:
          type: string
          description: Street address, e.g., 123 Main St, Apt 2
        city:
          type: string
          description: Name of city or town, e.g., New York City
        state:
          type: string
          description: ISO 3166-2 code (or name) of the state/province/region or similar
            administrative subdivision, e.g., NY
        zip:
          type: string
          description: Postal code (US is ZIP Code™ or ZIP+4 Code™)
        country:
          type: string
          description: ISO 3166-1 alpha-2 code (or name) of the country, e.g., US
      description: Mailing or geographical address
    OfficeLocationCreateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of this location. Must be unique and not null.
        address:
          $ref: '#/components/schemas/AddressDto'
        phoneNumber:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        isPrimary:
          type: boolean
          description: Indicates whether or not this location is the default for this
            company. If true the existing primary office location will be set to false
        source:
          $ref: '#/components/schemas/SourceInfoDto'
      description: Location associated with a company
    OfficeLocationDto:
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID) for the office location
        isPrimary:
          type: boolean
          description: Indicates whether or not this location is the default for this
            company. If true the existing primary office location will be set to false
        name:
          type: string
          description: Name of this location
        phoneNumber:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        address:
          $ref: '#/components/schemas/AddressDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
      description: Location associated with a company
    OfficeLocationUpdateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of this location. Must be unique and not null.
        address:
          $ref: '#/components/schemas/AddressDto'
        phoneNumber:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        isPrimary:
          type: boolean
          description: Indicates whether or not this location is the default for this
            company. If true the existing primary office location will be set to false
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ContactFilterRequestDto:
      type: object
      properties:
        emailAddress:
          type: string
          description: Must match typical email address form
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
      description: The contact filter should specify 0 or 1 filter terms
    FilterResponseDto[ContactReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/ContactReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    ContactReferenceDto:
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID)
        firstName:
          type: string
          description: The name to appear first, the given name in most western cultures
        lastName:
          type: string
          description: The name to appear last, the family name in most western cultures
        emailAddress:
          type: string
          description: Must match typical email address form
        isActive:
          type: boolean
          description: If false the user can not login into info exchange and will
            not show up in project teams
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ContactCreateRequestDto:
      type: object
      properties:
        firstName:
          type: string
          description: The name to appear first, the given name in most western cultures
        lastName:
          type: string
          description: The name to appear last, the family name in most western cultures
        companyId:
          type: string
          description: The company ID (typically a GUID) that this user is affiliated
            with. ID must exist else a 400 (Bad Request) response will be returned.
        emailAddress:
          type: string
          description: "Must be NPC globally unique otherwise a 409 (Conflict) response\
            \ will be returned.\r\nIf null, then firstName and/or lastName must be\
            \ specified, otherwise must be formatted as an email address."
        phoneNumberWork:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberMobile:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberHome:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        disciplines:
          type: array
          description: List of disciplines associated with this contact from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        jobTitle:
          type: string
          description: The contact's job title (plain text), e.g., "Project Manager"
        departmentName:
          type: string
          description: Name of the company department the contact is in (plain text),
            e.g., "Accounting"
        notes:
          type: string
          description: Notes about this contact (in HTML)
        culture:
          type: string
          description: The contact's preferred ISO 639-1 alpha-2 code language tag,
            e.g., "en-US". Must not be null. Must be a supported language, i.e., en,
            fr, de
        address:
          $ref: '#/components/schemas/AddressDto'
        isActive:
          type: boolean
          description: If false the user cannot login into Info Exchange and will
            not show up in project teams
        source:
          $ref: '#/components/schemas/SourceInfoDto'
      description: A contact, typically a person
    ContactDto:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: ID (typically a GUID) for the contact
        firstName:
          type: string
          description: The name to appear first, the given name in most western cultures
        lastName:
          type: string
          description: The name to appear last, the family name in most western cultures
        companyId:
          type: string
          description: The company ID (typically a GUID) that this user is affiliated
            with. ID must exist else a 400 (Bad Request) response will be returned.
        emailAddress:
          type: string
          description: "Must be NPC globally unique otherwise a 409 (Conflict) response\
            \ will be returned.\r\nIf null, then firstName and/or lastName must be\
            \ specified, otherwise must be formatted as an email address."
        phoneNumberWork:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberMobile:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberHome:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        disciplines:
          type: array
          description: List of disciplines associated with this contact from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        jobTitle:
          type: string
          description: The contact's job title (plain text), e.g., "Project Manager"
        departmentName:
          type: string
          description: Name of the company department the contact is in (plain text),
            e.g., "Accounting"
        notes:
          type: string
          description: Notes about this contact (in HTML)
        culture:
          type: string
          description: The contact's preferred ISO 639-1 alpha-2 code language tag,
            e.g., "en-US". Must not be null. Must be a supported language, i.e., en,
            fr, de
        address:
          $ref: '#/components/schemas/AddressDto'
        isActive:
          type: boolean
          description: If false the user cannot login into Info Exchange and will
            not show up in project teams
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ContactUpdateRequestDto:
      type: object
      properties:
        firstName:
          type: string
          description: The name to appear first, the given name in most western cultures
        lastName:
          type: string
          description: The name to appear last, the family name in most western cultures
        companyId:
          type: string
          description: The company ID (typically a GUID) that this user is affiliated
            with. ID must exist else a 400 (Bad Request) response will be returned.
        emailAddress:
          type: string
          description: "Must be NPC globally unique otherwise a 409 (Conflict) response\
            \ will be returned.\r\nIf null, then firstName and/or lastName must be\
            \ specified, otherwise must be formatted as an email address."
        phoneNumberWork:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberMobile:
          type: string
          description: Telephone number (canonical or free format)
        phoneNumberHome:
          type: string
          description: Telephone number (canonical or free format)
        faxNumber:
          type: string
          description: Fax number (canonical or free format)
        disciplines:
          type: array
          description: List of disciplines associated with this contact from the Global
            Discipline List, e.g., "Architectural", "Electrical"
          items:
            type: string
        jobTitle:
          type: string
          description: The contact's job title (plain text), e.g., "Project Manager"
        departmentName:
          type: string
          description: Name of the company department the contact is in (plain text),
            e.g., "Accounting"
        notes:
          type: string
          description: Notes about this contact (in HTML)
        culture:
          type: string
          description: The contact's preferred ISO 639-1 alpha-2 code language tag,
            e.g., "en-US". Must not be null. Must be a supported language, i.e., en,
            fr, de
        address:
          $ref: '#/components/schemas/AddressDto'
        isActive:
          type: boolean
          description: If false the user cannot login into Info Exchange and will
            not show up in project teams
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    EdmsPluginsResponseDto:
      type: object
      properties:
        edmsPluginConfigs:
          type: array
          items:
            $ref: '#/components/schemas/EdmsPluginConfig'
    EdmsPluginConfig:
      type: object
      properties:
        id:
          type: string
        configName:
          type: string
        pluginName:
          type: string
        connectionString:
          type: string
    KeywordListAssignmentDto:
      type: object
      properties:
        type:
          type: string
          description: "Identifies the project property or project item property associated\
            \ with a keyword list.\r\nThis corresponds to either the Project Center\
            \ \"Project Settings\" dialog,\r\n\"Activity Center Setup\" tab, \"Define\
            \ List Values\" section, \"Project Item Field\" column,\r\nor the \"Other\
            \ Projects List\" tab, \"Project Item Field\"."
          enum:
          - action_item_discipline
          - action_item_keywords
          - action_item_status
          - action_item_type
          - addendum_action_list
          - addendum_discipline_list
          - addendum_keyword_list
          - addendum_reasons_list
          - addendum_types_list
          - addendum_workflow_status
          - asi_action_list
          - asi_discipline_list
          - asi_keyword_list
          - asi_reasons_list
          - asi_types_list
          - asi_workflow_status
          - bim_element_keywords
          - bim_model_discipline
          - bim_model_keywords
          - bulletin_action_list
          - bulletin_ccd_sum_type_list
          - bulletin_cop_status_list
          - bulletin_discipline_list
          - bulletin_keyword_list
          - bulletin_reasons_list
          - bulletin_types_list
          - bulletin_workflow_status
          - ccd_action_list
          - ccd_cop_status_list
          - ccd_discipline_list
          - ccd_keyword_list
          - ccd_reasons_list
          - ccd_sum_type_list
          - ccd_workflow_status
          - change_order_action_list
          - change_order_discipline_list
          - change_order_keyword_list
          - change_order_proposal_action_list
          - change_order_proposal_discipline_list
          - change_order_proposal_keyword_list
          - change_order_proposal_reasons_list
          - change_order_proposal_workflow_status
          - change_order_reasons_list
          - change_order_workflow_status
          - contract_action_list
          - contract_discipline_list
          - contract_keyword_list
          - contract_terms_list
          - contract_type_contractor_list
          - contract_workflow_status
          - daily_report_equipment_list
          - daily_report_keyword_list
          - daily_report_observations_category
          - daily_report_status
          - daily_report_subcontractor_discipline
          - discussion_actions
          - document_control_discipline
          - document_control_keywords
          - document_control_purposes
          - document_control_scales
          - document_control_sizes
          - document_control_types
          - document_set_keywords
          - document_set_status
          - event_keywords
          - field_note_keyword_list
          - markup_session_keywords
          - markup_session_status
          - markup_status_list
          - model_view_keywords
          - pco_keyword_list
          - pco_reasons_list
          - pco_status_list
          - pco_types_list
          - physical_transfer_methods
          - priority_list
          - project_email_keywords
          - project_file_keywords
          - proposal_request_action_list
          - proposal_request_cop_status_list
          - proposal_request_discipline_list
          - proposal_request_keyword_list
          - proposal_request_reasons_list
          - proposal_request_workflow_status
          - punch_list_disciplines
          - punch_list_keywords
          - punch_list_locations
          - punch_list_purposes
          - punch_list_spec_sections
          - punch_list_status
          - punch_list_types
          - record_document_package_status
          - record_document_revision_states
          - record_document_status
          - rfi_action_list
          - rfi_discipline_list
          - rfi_keyword_list
          - rfi_reasons_list
          - rfi_types_list
          - rfi_workflow_status
          - site_visit_keyword_list
          - site_visit_observations_category
          - site_visit_status_list
          - site_visit_type
          - sketch_discipline_list
          - sketch_keyword_list
          - sketch_reasons_list
          - sketch_status_list
          - sketch_types_list
          - space_keywords
          - submittal_action_list
          - submittal_discipline_list
          - submittal_keyword_list
          - submittal_spec_section_list
          - submittal_workflow_status
          - transmittal_keywords
          - transmittal_purposes
        keywordListId:
          type: string
          description: The ID of the specific keyword list associated with the project
            or project item property.
        allowCustom:
          type: boolean
          description: Identifies whether or not keyword values are constrained to
            the values in the specified keyword list.
    KeywordListsRequestDto:
      type: object
      properties:
        type:
          type: array
          description: This representing the keyword list assignment type assigned
            for a project
          items:
            type: string
            enum:
            - action_item_discipline
            - action_item_keywords
            - action_item_status
            - action_item_type
            - action_item_priority_list
            - addendum_action_list
            - addendum_discipline_list
            - addendum_keyword_list
            - addendum_reasons_list
            - addendum_types_list
            - addendum_workflow_status
            - asi_action_list
            - asi_discipline_list
            - asi_keyword_list
            - asi_reasons_list
            - asi_types_list
            - asi_workflow_status
            - bim_element_keywords
            - bim_model_discipline
            - bim_model_keywords
            - bulletin_action_list
            - bulletin_ccd_sum_type_list
            - bulletin_cop_status_list
            - bulletin_discipline_list
            - bulletin_keyword_list
            - bulletin_reasons_list
            - bulletin_types_list
            - bulletin_workflow_status
            - ccd_action_list
            - ccd_cop_status_list
            - ccd_discipline_list
            - ccd_keyword_list
            - ccd_reasons_list
            - ccd_sum_type_list
            - ccd_workflow_status
            - change_order_action_list
            - change_order_discipline_list
            - change_order_keyword_list
            - change_order_reasons_list
            - change_order_workflow_status
            - change_order_proposal_action_list
            - change_order_proposal_discipline_list
            - change_order_proposal_keyword_list
            - change_order_proposal_reasons_list
            - change_order_proposal_workflow_status
            - contract_action_list
            - contract_discipline_list
            - contract_keyword_list
            - contract_terms_list
            - contract_type_contractor_list
            - contract_workflow_status
            - daily_report_equipment_list
            - daily_report_keyword_list
            - daily_report_observations_category
            - daily_report_status
            - daily_report_subcontractor_discipline
            - discussion_actions
            - document_control_discipline
            - document_control_keywords
            - document_control_purposes
            - document_control_scales
            - document_control_sizes
            - document_control_types
            - record_document_package_status
            - record_document_revision_states
            - record_document_status
            - document_set_keywords
            - document_set_status
            - event_keywords
            - field_notes_keyword_list
            - markup_session_keywords
            - markup_session_status
            - markup_status_list
            - model_view_keywords
            - pco_keyword_list
            - pco_reasons_list
            - pco_status_list
            - pco_types_list
            - physical_transfer_methods
            - project_email_keywords
            - project_file_keywords
            - proposal_request_action_list
            - proposal_request_cop_status_list
            - proposal_request_discipline_list
            - proposal_request_keyword_list
            - proposal_request_reasons_list
            - proposal_request_workflow_status
            - punch_list_disciplines
            - punch_list_keywords
            - punch_list_locations
            - punch_list_purposes
            - punch_list_spec_sections
            - punch_list_status
            - punch_list_types
            - rfi_action_list
            - rfi_discipline_list
            - rfi_keyword_list
            - rfi_reasons_list
            - rfi_types_list
            - rfi_workflow_status
            - site_visit_keyword_list
            - site_visit_observations_category
            - site_visit_status_list
            - site_visit_type
            - sketch_discipline_list
            - sketch_keyword_list
            - sketch_reasons_list
            - sketch_status_list
            - sketch_types_list
            - space_keywords
            - submittal_action_list
            - submittal_discipline_list
            - submittal_keyword_list
            - submittal_spec_section_list
            - submittal_workflow_status
            - transmittal_keywords
            - transmittal_purposes
            - action_items
            - addendums
            - supplemental_instructions
            - bim
            - bulletins
            - contruction_change_directives
            - change_orders
            - change_order_proposals
            - contracts
            - daily_reports
            - document_control
            - document_set
            - markup_session
            - markup_status
            - potential_change_orders
            - project
            - proposal_requests
            - punch_list
            - rfis
            - site_visits
            - sketches_and_supplemental_drawings
            - submittals
            - transmittals
            - field_notes
        paging:
          $ref: '#/components/schemas/PagingRequest'
        isFilterByType:
          type: boolean
          description: If filtering based on keyword list assignment type
          readOnly: true
    FilterResponseDto[KeywordListsResponseDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/KeywordListsResponseDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    KeywordListsResponseDto:
      type: object
      properties:
        type:
          type: string
          description: "Identifies the project property or project item property associated\
            \ with a keyword list.\r\nThis corresponds to either the Project Center\
            \ \"Project Settings\" dialog,\r\n\"Activity Center Setup\" tab, \"Define\
            \ List Values\" section, \"Project Item Field\" column,\r\nor the \"Other\
            \ Projects List\" tab, \"Project Item Field\"."
          enum:
          - action_item_discipline
          - action_item_keywords
          - action_item_status
          - action_item_type
          - action_item_priority_list
          - addendum_action_list
          - addendum_discipline_list
          - addendum_keyword_list
          - addendum_reasons_list
          - addendum_types_list
          - addendum_workflow_status
          - asi_action_list
          - asi_discipline_list
          - asi_keyword_list
          - asi_reasons_list
          - asi_types_list
          - asi_workflow_status
          - bim_element_keywords
          - bim_model_discipline
          - bim_model_keywords
          - bulletin_action_list
          - bulletin_ccd_sum_type_list
          - bulletin_cop_status_list
          - bulletin_discipline_list
          - bulletin_keyword_list
          - bulletin_reasons_list
          - bulletin_types_list
          - bulletin_workflow_status
          - ccd_action_list
          - ccd_cop_status_list
          - ccd_discipline_list
          - ccd_keyword_list
          - ccd_reasons_list
          - ccd_sum_type_list
          - ccd_workflow_status
          - change_order_action_list
          - change_order_discipline_list
          - change_order_keyword_list
          - change_order_reasons_list
          - change_order_workflow_status
          - change_order_proposal_action_list
          - change_order_proposal_discipline_list
          - change_order_proposal_keyword_list
          - change_order_proposal_reasons_list
          - change_order_proposal_workflow_status
          - contract_action_list
          - contract_discipline_list
          - contract_keyword_list
          - contract_terms_list
          - contract_type_contractor_list
          - contract_workflow_status
          - daily_report_equipment_list
          - daily_report_keyword_list
          - daily_report_observations_category
          - daily_report_status
          - daily_report_subcontractor_discipline
          - discussion_actions
          - document_control_discipline
          - document_control_keywords
          - document_control_purposes
          - document_control_scales
          - document_control_sizes
          - document_control_types
          - record_document_package_status
          - record_document_revision_states
          - record_document_status
          - document_set_keywords
          - document_set_status
          - event_keywords
          - field_notes_keyword_list
          - markup_session_keywords
          - markup_session_status
          - markup_status_list
          - model_view_keywords
          - pco_keyword_list
          - pco_reasons_list
          - pco_status_list
          - pco_types_list
          - physical_transfer_methods
          - project_email_keywords
          - project_file_keywords
          - proposal_request_action_list
          - proposal_request_cop_status_list
          - proposal_request_discipline_list
          - proposal_request_keyword_list
          - proposal_request_reasons_list
          - proposal_request_workflow_status
          - punch_list_disciplines
          - punch_list_keywords
          - punch_list_locations
          - punch_list_purposes
          - punch_list_spec_sections
          - punch_list_status
          - punch_list_types
          - rfi_action_list
          - rfi_discipline_list
          - rfi_keyword_list
          - rfi_reasons_list
          - rfi_types_list
          - rfi_workflow_status
          - site_visit_keyword_list
          - site_visit_observations_category
          - site_visit_status_list
          - site_visit_type
          - sketch_discipline_list
          - sketch_keyword_list
          - sketch_reasons_list
          - sketch_status_list
          - sketch_types_list
          - space_keywords
          - submittal_action_list
          - submittal_discipline_list
          - submittal_keyword_list
          - submittal_spec_section_list
          - submittal_workflow_status
          - transmittal_keywords
          - transmittal_purposes
          - action_items
          - addendums
          - supplemental_instructions
          - bim
          - bulletins
          - contruction_change_directives
          - change_orders
          - change_order_proposals
          - contracts
          - daily_reports
          - document_control
          - document_set
          - markup_session
          - markup_status
          - potential_change_orders
          - project
          - proposal_requests
          - punch_list
          - rfis
          - site_visits
          - sketches_and_supplemental_drawings
          - submittals
          - transmittals
          - field_notes
        keywordListId:
          type: string
          description: The ID of the specific keyword list associated with the project
            or project item property.
        allowCustom:
          type: boolean
          description: Identifies whether or not keyword values are constrained to
            the values in the specified keyword list.
        lastModifiedUtc_ListAssignment:
          type: string
          description: "Specifies the last modified date for keyword list assignment\
            \ type.\r\nThe Date represented as ISO 8061 format \"YYYY-MM-DDThh:mm:ss.sssZ\"\
            \ and milliseconds are included to 3 digits."
        lastModifiedUtc_KeywordList:
          type: string
          description: "Specifies the last modified date for global keyword list\r\
            \nThe Date represented as ISO 8061 format \"YYYY-MM-DDThh:mm:ss.sssZ\"\
            \ and milliseconds are included to 3 digits."
    ValidationResultModel:
      type: object
      properties:
        errorMessage:
          type: string
          readOnly: true
        modelState:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
    Error:
      type: object
      properties:
        ErrorMessage:
          type: string
          description: The error message in case of a failure.
    KeywordListByIdFilterDto:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingRequest'
    KeywordListDto[String]:
      type: object
      properties:
        id:
          type: string
          description: The keyword list identifier
        name:
          type: string
          description: "The name of the keyword list.\r\nThis corresponds to the Project\
            \ Center administration \"Keywords\" tab column named \"List Name\"."
        type:
          type: string
          description: "The type of the keyword list.\r\nThis corresponds to the Project\
            \ Center administration \"Keywords\" tab column named \"List Type\"."
          enum:
          - action_item_status
          - action_item_type
          - addendum_actions
          - addendum_types
          - address_types
          - asi_actions
          - asi_types
          - auto_numbering_prefixes
          - bulletin_actions
          - bulletin_types
          - ccd_actions
          - ccd_sum_types
          - change_order_actions
          - change_order_proposal_actions
          - company_role
          - company_type
          - contact_role
          - contract_actions
          - contract_status
          - contract_terms
          - contract_tunction
          - contract_types
          - contract_types_contractor
          - cop_status
          - daily_report_equipment
          - daily_report_observations_category
          - discipline
          - discussion_actions
          - document_control_types
          - document_set_status
          - email_tag_override
          - form_letter_type
          - keyword
          - markup_session_status
          - markup_status
          - pco_status
          - pco_types
          - physical_transfer_methods
          - priority
          - project_phase
          - project_status
          - project_type
          - proposal_request_actions
          - punch_list_keywords
          - punch_list_locations
          - punch_list_purposes
          - punch_list_status
          - punch_list_types
          - reasons
          - record_document_package_status
          - record_document_revision_states
          - record_document_status
          - report_status
          - rfi_actions
          - rfi_types
          - scales
          - site_visit_observations_category
          - site_visit_status
          - site_visit_type
          - sizes
          - sketch_status
          - sketch_types
          - spec_section
          - submittal_actions
          - transmittal_purposes
          - workflow_status
        required:
          type: boolean
          description: Determines if the keyword list is required or not
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/KeywordListDefinitionDto[String]'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    KeywordListDefinitionDto[String]:
      type: object
      properties:
        name:
          type: string
          description: "The name of the keyword.\r\nThis corresponds to the Project\
            \ Center keyword list dialog's \"Name\" column."
        type:
          type: string
          description: "The type of the keyword.\r\nThis corresponds to the Project\
            \ Center keyword list dialog's \"Type\" column."
        description:
          type: string
          description: "The description of the keyword.\r\nThis corresponds to the\
            \ Project Center keyword list dialog's \"Description\" column."
        displayOrder:
          type: integer
          description: The display order to use for sorting keywords
          format: int32
    ProjectCompanyRoleDto:
      type: object
      properties:
        projectCompanyRoleId:
          type: string
        companyId:
          type: string
        role:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ProjectCompanyRoleListResponse:
      type: object
      properties:
        projectCompanyRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompanyRoleDto'
    ProjectCompanyRoleCreateRequestDto:
      required:
      - companyId
      - role
      type: object
      properties:
        companyId:
          type: string
        role:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ProjectFoldersResponseDto:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        folders:
          type: array
          items:
            $ref: '#/components/schemas/ProjectFolderDto'
    ProjectFolderDto:
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/EdmsObjectIdDto'
        folderKey:
          type: string
        isPrimary:
          type: boolean
        label:
          type: string
    EdmsObjectIdDto:
      type: object
      properties:
        path:
          type: string
          description: The path to the file in the EDMS or windows file system
        pluginConfigId:
          type: string
          description: Identifies which EDMS the file resides in ("?default" denotes
            the windows file system)
        providerId:
          type: string
          description: 'The identifier for this file provided by the EDMS. Note: Not
            used in all systems'
    ProjectDto:
      type: object
      properties:
        description:
          type: string
          description: A description of the project in plain text
        server:
          type: string
          description: The name of the Newforma Project Center Server (NPCS) hosting
            the project data and documents
        status:
          type: string
          description: The project status; one of names in the Global Project Status
            List, e.g., "Active", "Opportunity"
        type:
          type: string
          description: The type of project; one of the names in the Global Project
            Types keyword list, e.g., "High Rise", "Industrial", "Stadium", "Education"
        address:
          $ref: '#/components/schemas/AddressBaseDto'
        clientProjectNumber:
          type: string
          description: The client project number
        mainContactId:
          type: string
          description: The main contact
        managerId:
          type: string
          description: The project manager
        principalInChargeId:
          type: string
          description: The principal in charge
        id:
          type: string
          description: GUID of the project
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
          description: The project name
        number:
          type: string
          description: The project number
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    AddressBaseDto:
      type: object
      properties:
        street:
          type: string
          description: Street address, e.g., 123 Main St, Apt 2
        city:
          type: string
          description: Name of city or town, e.g., New York City
        state:
          type: string
          description: ISO 3166-2 code (or name) of the state/province/region or similar
            administrative subdivision, e.g., NY
        zip:
          type: string
          description: Postal code (US is ZIP Code™ or ZIP+4 Code™)
        country:
          type: string
          description: ISO 3166-1 alpha-2 code (or name) of the country, e.g., US
      description: Mailing or geographical address
    ProjectUpdateRequestDto:
      required:
      - name
      - status
      type: object
      properties:
        status:
          type: string
          description: The project status; one of names in the Global Project Status
            List, e.g., "Active", "Opportunity"
        name:
          type: string
          description: The project name
        number:
          type: string
          description: The project number
        description:
          type: string
          description: A description of the project in plain text
        type:
          type: string
          description: The type of project; one of the names in the Global Project
            Types keyword list, e.g., "High Rise", "Industrial", "Stadium", "Education"
        address:
          $ref: '#/components/schemas/AddressBaseDto'
        clientProjectNumber:
          type: string
          description: The client project number
        mainContactId:
          type: string
          description: Contact id for main project contact
        managerId:
          type: string
          description: Contact id for project manager
        principalInChargeId:
          type: string
          description: Contact id for project principal in charge
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ProjectFilterRequestDto:
      type: object
      properties:
        name:
          type: string
        number:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[ProjectReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/ProjectReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    ProjectReferenceDto:
      type: object
      properties:
        id:
          type: string
          description: GUID of the project
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
          description: The project name
        number:
          type: string
          description: The project number
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ProjectCreateRequestDto:
      required:
      - name
      - primaryProjectFolder
      - server
      - templateProjectId
      type: object
      properties:
        name:
          type: string
          description: The project name
        templateProjectId:
          type: string
          description: Creates the project from the template with the specified Id.
        server:
          type: string
          description: The name of the Newforma Project Center Server (NPCS) hosting
            the project data and documents
        primaryProjectFolder:
          $ref: '#/components/schemas/EdmsObjectIdDto'
        secondaryFolder:
          $ref: '#/components/schemas/EdmsObjectIdDto'
        status:
          type: string
          description: The project status; one of names in the Global Project Status
            List, e.g., "Active", "Opportunity"
        number:
          type: string
          description: The project number
        description:
          type: string
          description: A description of the project in plain text
        type:
          type: string
          description: The type of project; one of the names in the Global Project
            Types keyword list, e.g., "High Rise", "Industrial", "Stadium", "Education"
        address:
          $ref: '#/components/schemas/AddressBaseDto'
        clientProjectNumber:
          type: string
          description: The client project number
        mainContactId:
          type: string
          description: Contact id for main project contact
        managerId:
          type: string
          description: Contact id for project manager
        principalInChargeId:
          type: string
          description: Contact id for project principal in charge
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ProjectSettingsFilterRequestDto:
      required:
      - projectIds
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[ProjectSettingsResponseDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/ProjectSettingsResponseDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    ProjectSettingsResponseDto:
      type: object
      properties:
        projectId:
          type: string
          description: Specifies the projectId (GUID).
        name:
          type: string
          description: Specifies the project name.
        number:
          type: string
          description: Specifies the project number.
        lastModifiedDate:
          type: string
          description: "Specifies the last modified date for keyword list assignment\
            \ type.\r\nThe Date represented as ISO 8061 format \"YYYY-MM-DDThh:mm:ss.sssZ\"\
            \ and milliseconds are included to 3 digits."
        settings:
          $ref: '#/components/schemas/ProjectSettingsDto'
    ProjectSettingsDto:
      type: object
      properties:
        restrictDeletingItems:
          type: boolean
          description: Specifies item of project is deletable by admin or not.
        availableOnNIXServer:
          type: boolean
          description: Specifies availabilitye of the project on Info Exchange server.
        includeTransmittalInsteadOfEmailAttachment:
          type: boolean
          description: Specifies transmittal content is available for the project.
    ProjectTeamMemberFilterDto:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          format: date-time
        groupIds:
          type: string
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[ProjectTeamMemberRefDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/ProjectTeamMemberRefDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    ProjectTeamMemberRefDto:
      type: object
      properties:
        id:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        projectRef:
          $ref: '#/components/schemas/ProjectReferenceDto'
        contactRef:
          $ref: '#/components/schemas/ContactReferenceDto'
    ProjectTeamMemberCreateRequestDto:
      type: object
      properties:
        contactId:
          type: string
        calculatePermissionSet:
          type: boolean
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        permissionSetId:
          type: string
    ProjectTeamMemberDto:
      type: object
      properties:
        permissionSetId:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTeamGroupRefDto'
        id:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        projectRef:
          $ref: '#/components/schemas/ProjectReferenceDto'
        contactRef:
          $ref: '#/components/schemas/ContactReferenceDto'
    ProjectTeamGroupRefDto:
      type: object
      properties:
        id:
          type: string
    ProjectTeamMemberUpdateRequestDto:
      required:
      - permissionSetId
      type: object
      properties:
        permissionSetId:
          type: string
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    PunchListItemResponseDto:
      type: object
      properties:
        punchListItemId:
          type: string
          description: Identifies the punch list item (GUID).
        id:
          type: string
          description: The ID number of the punch list.
        spaceItem:
          $ref: '#/components/schemas/PunchListItemSpaceItemResponseDto'
        element:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        location:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        description:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        assignedTo:
          type: array
          description: The project team members the punch list item is assigned to.
          items:
            $ref: '#/components/schemas/PunchListItemContactResponseDto'
        dueDate:
          type: string
          description: 'The date the punch list item is due to be resolved. Supported
            ISO 8061 format: YYYY-MM-DDThh:mm:ssZ.'
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        date:
          type: string
          description: 'The date the punch list item was captured. Supported ISO 8061
            format: YYYY-MM-DDThh:mm:ssZ.'
        members:
          type: array
          description: The project team members involved with the punch list.
          items:
            $ref: '#/components/schemas/PunchListItemContactResponseDto'
        discipline:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        status:
          $ref: '#/components/schemas/KeywordDto[DBPunchlistItemStatus]'
        type:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        remarks:
          type: string
          description: Any details about the item (plain text only).
        keywords:
          type: array
          description: Any keywords applied to the punch list item.
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        capturedBy:
          $ref: '#/components/schemas/PunchListItemContactResponseDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedDate:
          type: string
          description: 'The last modified date of punch list item. Supported ISO 8061
            format: YYYY-MM-DDThh:mm:ssZ.'
        createdDate:
          type: string
          description: 'The date that document was created. Supported ISO 8061 format:
            YYYY-MM-DDThh:mm:ssZ.'
        discussionItems:
          type: array
          description: List of ids of discussion items related to this puch list item.
          items:
            $ref: '#/components/schemas/PunchListItemDiscussionItemResponseDto'
    PunchListItemSpaceItemResponseDto:
      type: object
      properties:
        spaceId:
          type: string
          description: The space / spatial index item Identifies (GUID) the punch
            list item is related.
        name:
          type: string
          description: The space / spatial index item name the punch list item is
            related.
        number:
          type: string
          description: The space / spatial index item name the punch list item is
            related.
    KeywordDto[GenericKeyword]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - generic
    PunchListItemContactResponseDto:
      type: object
      properties:
        contactId:
          type: string
          description: Identifies contact (GUID).
        firstName:
          type: string
          description: The first name of contact.
        lastName:
          type: string
          description: The last name of contact.
        email:
          type: string
          description: The email of contact.
    KeywordDto[DBPunchlistItemStatus]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - Draft
          - Open
          - Closed
          - Void
    PunchListItemDiscussionItemResponseDto:
      type: object
      properties:
        discussionItemId:
          type: string
          description: Identifies discussion item.
        action:
          $ref: '#/components/schemas/KeywordDto[DBDiscussionAction]'
        author:
          $ref: '#/components/schemas/PunchListItemContactResponseDto'
        remarks:
          type: string
          description: Any details about the discussion (plain text only).
        dateTime:
          type: string
          description: 'The date and time the discussion took place. Supported ISO
            8061 format: YYYY-MM-DDThh:mm:ssZ.'
    KeywordDto[DBDiscussionAction]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - Completed
          - Approved
          - Rejected
          - Comment
    ModifyPunchListItemDto:
      type: object
      properties:
        spaceId:
          $ref: '#/components/schemas/Option[String]'
        id:
          $ref: '#/components/schemas/Option[String]'
        type:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        location:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        element:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        description:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        assignedTo:
          $ref: '#/components/schemas/Option[String[]]'
        capturedBy:
          $ref: '#/components/schemas/Option[String]'
        members:
          $ref: '#/components/schemas/Option[String[]]'
        dueDate:
          $ref: '#/components/schemas/Option[String]'
        date:
          $ref: '#/components/schemas/Option[String]'
        specSection:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        discipline:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        purpose:
          $ref: '#/components/schemas/Option[KeywordDto[GenericKeyword]]'
        status:
          $ref: '#/components/schemas/Option[KeywordDto[PunchlistItemStatus]]'
        keywords:
          $ref: '#/components/schemas/Option[KeywordDto`1[]]'
        remarks:
          $ref: '#/components/schemas/Option[String]'
    SourceDetailDto:
      type: object
      properties:
        sourcePrimaryKey:
          type: string
          description: The identifier of data object in the third-party system. May
            be any string or serialized object as defined by the third-party system.
        sourceDescriptor:
          type: string
          description: A short descriptive (human-readable) name of the third-party
            system or subsystem.
      description: created this class because in SourceInfoDto class both fields are
        required,requirement for modify space endpoint is if user try to pass the
        any one source field should retrun error message
    Option[String]:
      type: object
      properties:
        value:
          type: string
          description: Actual value hold by the object
    Option[KeywordDto[GenericKeyword]]:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
    Option[String[]]:
      type: object
      properties:
        value:
          type: array
          description: Actual value hold by the object
          items:
            type: string
    Option[KeywordDto[PunchlistItemStatus]]:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/KeywordDto[PunchlistItemStatus]'
    Option[KeywordDto`1[]]:
      type: object
      properties:
        value:
          type: array
          description: Actual value hold by the object
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
    KeywordDto[PunchlistItemStatus]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - Draft
          - Open
          - Closed
          - Void
    CreatePunchListItemDto:
      required:
      - date
      - description
      - discipline
      - element
      - location
      - purpose
      - spaceId
      - status
      - type
      type: object
      properties:
        spaceId:
          type: string
          description: The Punch List Item SpaceId field is REQUIRED. Its value must
            exist in the project spaces
        id:
          type: string
          description: The Punch List Item ID field might be REQUIRED depending on
            the project settings. If value is not provided and is not required in
            the project it will work as autonumber and pick the first available value
            in the project. Null or empty values for either name or type are not accepted
            and will result in bad request
        type:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        location:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        element:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        description:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        assignedTo:
          type: array
          description: The Punch List Item AssignedTo field is Optional. Please provide
            guid values of contacts you wish to assign the punch list item to
          items:
            type: string
        capturedBy:
          type: string
          description: The Punch List Item CapturedBy field is Optional. Please provide
            guid values of contact you wish to mark as the one who captured the punch
            list item
        members:
          type: array
          description: The Punch List Item Members field is Optional. Please provide
            guid values of contacts you wish to make mambers of the punch list item
          items:
            type: string
        dueDate:
          type: string
          description: The Punch List Item DueDate field is Optional. Please provide
            a date in ISO-8601 format. Dates in any other format are invalid. It's
            the punch list item due date.
        date:
          type: string
          description: The Punch List Item Date field is REQUIRED. Please provide
            a date in ISO-8601 format. Dates in any other format are invalid. It's
            the punch list item date
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        discipline:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        status:
          $ref: '#/components/schemas/KeywordDto[PunchlistItemStatus]'
        keywords:
          type: array
          description: The Punch List Item Keywords field is Optional. It's an array
            of keywords. Only generic type is accepted. Null or empty values for either
            name or type are not accepted and will result in bad request
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        remarks:
          type: string
          description: The Punch List Item Remarks field is Optional. Those are remarks
            for the punch list item.
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    PunchListItemsFilterRequestDto:
      type: object
      properties:
        punchListItemId:
          type: string
          description: Identifies the punch list item (GUID).
        id:
          type: string
          description: The ID number of the punch list.
        spaceItem:
          $ref: '#/components/schemas/PunchListItemsSpaceFilterRequestDto'
        type:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        discipline:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        status:
          $ref: '#/components/schemas/KeywordDto[DBPunchlistItemStatus]'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        assignedTo:
          type: string
          description: The project team members the punch list is assigned to. Identifies
            the project (GUID).
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        lastAction:
          $ref: '#/components/schemas/KeywordDto[DBDiscussionAction]'
        lastModifiedDate:
          type: string
          description: 'The last modified date of punch list item. Supported ISO 8601
            formats without milliseconds: `YYYY-MM-DDThh:mm:ssZ`, `YYYY-MM-DDThh:mm:ssZ`,
            `YYYY-MM-DDThh:mm:ss+hh:mm`, `YYYY-MM-DDThh:mm:ss-hh:mm`, `YYYY-MM-DDThh:mm:ss+hh:mm`,
            `YYYY-MM-DDThh:mm:ss-hh:mm`. Requested date time will be converted to
            UTC date time, examples: `2022-05-05T10:00:00Z` - `2022-05-05 10:00:00`,
            `2022-05-05T10:00:00+02:00` - `2022-05-05 08:00:00`, `2022-05-05T10:00:00-02:00`
            - `2022-05-05 12:00:00`. Converter assumes that the date sent will be
            a local time with the time difference of the timezone (time zone difference
            included in requested date). If there is no difference `Z`, it assumes
            that it is `00:00`.'
        paging:
          $ref: '#/components/schemas/PagingRequest'
      description: Model for filtering.
    PunchListItemsSpaceFilterRequestDto:
      type: object
      properties:
        spaceId:
          type: string
          description: The space / spatial index item id the punch list is related.
        name:
          type: string
          description: The space / spatial index item name the punch list is related.
        number:
          type: string
          description: The space / spatial index item number the punch list is related.
      description: Model for filtering.
    FilterResponseDto[PunchListItemsResponseDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/PunchListItemsResponseDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    PunchListItemsResponseDto:
      type: object
      properties:
        projectId:
          type: string
          description: The project id - GUID.
        punchListItemId:
          type: string
          description: The punch list item id - GUID.
        id:
          type: string
          description: The ID number of the punch list.
        spaceItem:
          $ref: '#/components/schemas/PunchListItemsSpaceItemResponseDto'
        type:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        discipline:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        status:
          $ref: '#/components/schemas/KeywordDto[DBPunchlistItemStatus]'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        assignedTo:
          type: array
          description: The project team members the punch list item is assigned to
            - GUID.
          items:
            type: string
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        lastAction:
          $ref: '#/components/schemas/KeywordDto[DBDiscussionAction]'
        hasSupportedDocuments:
          type: boolean
          description: Information about whether the punch list item has files.
    PunchListItemsSpaceItemResponseDto:
      type: object
      properties:
        spaceId:
          type: string
          description: The space / spatial index item id the punch list item is related.
        name:
          type: string
          description: The space / spatial index item name the punch list item is
            related.
        number:
          type: string
          description: The space / spatial index item number the punch list item is
            related.
    ExtendedPropertiesGroupDto:
      type: object
      properties:
        groupName:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedPropertyDto'
    ExtendedPropertyDto:
      type: object
      properties:
        name:
          type: string
        defaultValue:
          type: string
    RecordDocumentDetailsDto:
      type: object
      properties:
        id:
          type: string
          description: The specific information about the record doc being returned
        number:
          type: string
        title:
          type: string
        disciplines:
          type: array
          items:
            type: string
        types:
          type: array
          items:
            type: string
        purpose:
          type: array
          items:
            $ref: '#/components/schemas/KeywordDto[DBKeywordType]'
        status:
          $ref: '#/components/schemas/KeywordDto[DBRecordDocumentStatus]'
        description:
          type: string
        size:
          type: string
        scale:
          type: string
        lastModifiedUtc:
          type: string
          format: date-time
        packages:
          type: array
          items:
            type: string
        extendedProperties:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedPropertiesGroupDto'
        revisions:
          type: array
          items:
            $ref: '#/components/schemas/RecordDocumentRevisionDto'
    KeywordDto[DBKeywordType]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - GenericKeyword
          - PhysicalTransferMethod
          - BasicTransmittalIncoming
          - BasicTransmittalOutgoing
          - DeprecatedSubmittalReceive
          - DeprecatedSubmittalForward
          - DeprecatedSubmittalReviewResponse
          - DeprecatedSubmittalNoActionTaken
          - DeprecatedSubmittalApprove
          - DeprecatedSubmittalResubmit
          - DeprecatedSubmittalReject
          - DeprecatedRFIReceive
          - DeprecatedRFIAssign
          - DeprecatedRFIConsultantAnswer
          - DeprecatedRFIConsultantNoAnswer
          - DeprecatedRFIResponseNoImpact
          - DeprecatedRFIResponsePotentialImpact
          - DeprecatedRFIResponseHasImpact
          - ProjectStatusOpportunity
          - ProjectStatusActive
          - ProjectStatusArchive
          - ProjectStatusOffline
          - ActionItemStatusOpen
          - ActionItemStatusClosed
          - ActionItemStatusDeferred
          - ActionItemStatusActionComplete
          - MarkupSessionStatusOpen
          - MarkupSessionStatusClosed
          - DocumentSetStatusActive
          - DocumentSetStatusInactive
          - AddressTypeMailing
          - AddressTypeOffice
          - AddressTypeJobSite
          - WorkflowDraft
          - WorkflowExpected
          - WorkflowOpen
          - WorkflowClosed
          - WorkflowPending
          - PunchListStatusOpen
          - PunchListStatusClosed
          - PunchListStatusDraft
          - PunchListStatusVoid
          - DiscussionActionCompleted
          - DiscussionActionApproved
          - DiscussionActionRejected
          - DiscussionActionComment
          - UDACReceive
          - UDACForward
          - UDACRecordResponse
          - UDACSend
          - UDACClose
          - UDACReopen
          - UDACSendAndClose
          - UDACRespondAndCloseNoActionTaken
          - UDACRespondAndCloseApprove
          - UDACRespondAndCloseRejected
          - UDACRespondAndCloseResubmit
          - UDACFinalReceive
          - RecordDocumentRevisionStateDraft
          - RecordDocumentRevisionStateIssued
          - ContractOpen
          - ContractInactive
          - SketchOpen
          - SketchClosed
          - RecordDocumentStatusActive
          - RecordDocumentStatusInactive
          - CompanyRoleLeadDesigner
          - CompanyRoleClient
          - CompanyRoleGeneralContractor
          - CompanyRoleContractor
          - CompanyRoleSubContractor
          - CompanyRoleConsultant
          - CompanyRoleAgency
          - CompanyRoleVendor
          - UDACFinalizableDraft
          - UDACFinalizableFinal
          - UDACSiteVisitSafety
          - UDACSiteVisitQuality
          - UDACSiteVisitDesign
          - UDACSiteVisitOther
          - UDACCost
          - UDACBudget
          - UDACPCOOpen
          - UDACPCOPricingComplete
          - UDACPCOClosed
          - UDACPCOVoid
          - UDACPCODraft
          - UDACCloseApprove
          - UDACSendAndCloseApprove
          - UDACCloseNoActionTaken
          - UDACCloseRejected
          - RecordDocumentPackageStatusDraft
          - RecordDocumentPackageStatusIssued
    KeywordDto[DBRecordDocumentStatus]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - Active
          - Inactive
    RecordDocumentRevisionDto:
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        createdDateUtc:
          type: string
          format: date-time
        description:
          type: string
        state:
          $ref: '#/components/schemas/KeywordDto[DBRecordDocumentRevisionState]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[DBKeywordType]'
        transmittals:
          type: array
          items:
            $ref: '#/components/schemas/TransmittalSummaryDto'
        revisionFile:
          $ref: '#/components/schemas/VersionedEdmsObjectIdDto'
    KeywordDto[DBRecordDocumentRevisionState]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - Issued
          - NotIssued
    TransmittalSummaryDto:
      required:
      - action
      - creationDate
      - dueDate
      - via
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        action:
          $ref: '#/components/schemas/KeywordDto[DBTransmittalActionType]'
        creationDate:
          type: string
          description: Transmittal date, no time included
          format: date
        dueDate:
          type: string
          description: The due date, no time included
          format: date
        via:
          $ref: '#/components/schemas/ViaDto'
        relatedFiles:
          type: array
          items:
            $ref: '#/components/schemas/RelatedFileDto'
    VersionedEdmsObjectIdDto:
      type: object
      properties:
        version:
          type: string
          description: The version of the file in the EDMS
        path:
          type: string
          description: The path to the file in the EDMS or windows file system
        pluginConfigId:
          type: string
          description: Identifies which EDMS the file resides in ("?default" denotes
            the windows file system)
        providerId:
          type: string
          description: 'The identifier for this file provided by the EDMS. Note: Not
            used in all systems'
    KeywordDto[DBTransmittalActionType]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - BasicTransmittalIncoming
          - BasicTransmittalOutgoing
          - DeprecatedSubmittalReceive
          - DeprecatedSubmittalForward
          - DeprecatedSubmittalReviewResponse
          - DeprecatedSubmittalNoActionTaken
          - DeprecatedSubmittalApprove
          - DeprecatedSubmittalResubmit
          - DeprecatedSubmittalReject
          - DeprecatedRFIReceive
          - DeprecatedRFIAssign
          - DeprecatedRFIConsultantAnswer
          - DeprecatedRFIConsultantNoAnswer
          - DeprecatedRFIResponseNoImpact
          - DeprecatedRFIResponsePotentialImpact
          - DeprecatedRFIResponseHasImpact
          - DeprecatedRFIClose
          - DeprecatedSubmittalClose
          - UDACReceive
          - UDACForward
          - UDACRecordResponse
          - UDACSend
          - UDACClose
          - UDACReopen
          - UDACSendAndClose
          - UDACRespondAndCloseNoActionTaken
          - UDACRespondAndCloseApprove
          - UDACRespondAndCloseRejected
          - UDACRespondAndCloseResubmit
          - UDACFinalReceive
          - UDACCloseApprove
          - UDACSendAndCloseApprove
          - UDACCloseNoActionTaken
          - UDACCloseRejected
    ViaDto:
      required:
      - label
      - type
      type: object
      properties:
        type:
          type: string
          description: "String of how the parent item was received.  This type is\
            \ a keyword that\r\ncould be a value from the \"Global Physical Transfer\
            \ Method List\"\r\nor the \"Define Send Via and Receive Via Values\" section\
            \ within\r\nproject settings."
          enum:
          - None
          - Email
          - InfoExchange
          - DragDrop
          - Physical
          - ConnectorBluebeam
          - NewformaApi
        label:
          type: string
          description: String of the name of the type.  This label is user defined.
        url:
          type: string
          description: Source URL of the original item received or sent
      description: This is the method that was used to send or receive the transmittal.
    RelatedFileDto:
      type: object
      properties:
        relationshipType:
          type: string
          description: Describes the relationship between the file and its associated
            project item.
          enum:
          - SupportingDocument
          - SupportingEmail
          - RecordCopyZip
          - TransmittalPDF
          - PreviousTransmittalPDF
          - MarkupSource
          - MarkupExternalFormat
          - MarkupLink
          - MasterZip
          - KeywordAssignment
          - BimSourceFile
          - DataSheet
          - RecordDocumentRevisionSource
          - SketchSource
          - PendingFolderUpdateZip
          - Active
          - Archive
          - ContractFile
          - ChangeOrderFile
          - ManifestEntryMarkupSource
          - MissingFileMarkupSource
          - GeneratedFile
          - ProjectFile
        file:
          $ref: '#/components/schemas/VersionedEdmsObjectIdDto'
    IssuedDocumentFilterRequestDto:
      type: object
      properties:
        lastModifiedUtc:
          type: string
          format: date-time
        contentFormatType:
          type: string
          description: This controls how the content of the Description field is returned.
          enum:
          - Default
          - HTML
          - RTF
          - Text
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[RecordDocumentDetailsDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/RecordDocumentDetailsDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    GenericFilterRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Filters the result to include only items with this value as
            the Subject
        projectItemNumber:
          type: string
          description: Filters the result to include only items with this value as
            the Number or ID
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        lastModifiedUtc:
          type: string
          description: Filters the result to include only those items modified since
            the given date/time (in UTC)
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
    KeywordDto[WorkflowStatus]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - closed
          - draft
          - expected
          - open
          - pending
    FilterResponseDto[RfiReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/RfiReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    RfiReferenceDto:
      required:
      - id
      - number
      - subject
      type: object
      properties:
        transmittalIds:
          type: array
          description: The transmittal identifiers associated with this item
          items:
            type: string
        senderId:
          type: string
          description: The sender's ID
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        id:
          type: string
          description: The GUID of the project item
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        relatedFiles:
          type: array
          description: Project files associated with this project item.
          items:
            $ref: '#/components/schemas/RelatedFileDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        relatedItems:
          type: array
          description: "Optional. If the Transmitalll is the issuance of record document\
            \ then this will contain\r\n the record document revision Id. In the future\
            \ this may handle additional use cases."
          items:
            $ref: '#/components/schemas/RelatedItemDto'
    RelatedItemDto:
      type: object
      properties:
        id:
          type: string
          description: The ID of the project file.
        relationshipType:
          type: string
          description: Describes the relationship between the objects.
        relatedItemType:
          type: string
          description: Describes the  project item type .
    CreateRfiDto:
      required:
      - rfiType
      - status
      - subject
      type: object
      properties:
        rfiType:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        reasons:
          type: array
          description: The Reasons field is OPTIONAL
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        originatedBy:
          type: string
          description: "The Originated field is OPTIONAL.  If specified it must be\
            \ the valid GUID of a contact associated\r\nwith the project"
        discipline:
          type: array
          description: "The Discipline field is OPTIONAL.  If specified the values\
            \ must exist in the UAC Disciplines List\r\nor the project setting must\
            \ be set to allow custom"
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        contract:
          type: string
          description: "The Contract field is OPTIONAL.  If specified it must be the\
            \ valid GUID of a contract associated\r\nwith the project"
        suggestion:
          type: string
          description: The Suggestion field is OPTIONAL.
        senderId:
          type: string
          description: "The sender's ID must be in the form of a Guid\r\n<br />\r\n\
            SUBMITTALS: REQUIRED EXCEPT for  when \"status\" is \"expected\" or \"\
            draft\".\r\n<br />\r\nSUBMITTALS: This field is PROHIBITED (i.e., must\
            \ be undefined, null or empty) when \"status\" is \"expected\" or \"draft\"\
            \r\n<br />\r\nRFI: REQUIRED"
        toContactIds:
          type: array
          description: "Contact id(s) of those who the item is being sent. Id(s) must\
            \ be in the form of a Guid\r\n<br />\r\nSUBMITTALS: This field is REQUIRED\
            \ EXCEPT when \"status\" is \"expected\" or \"draft\", otherwise it is\
            \ optional.\r\n<br />\r\nRFI: REQUIRED"
          items:
            type: string
        fromContactId:
          type: string
          description: "Contact id of the person who sent the item. Id must be in\
            \ the form of a Guid\r\n<br />\r\nSUBMITTALS: This field is REQUIRED EXCEPT\
            \ when \"status\" is \"expected\" or \"draft\", otherwise it is optional.\r\
            \n<br />\r\nRFI: REQUIRED"
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        action:
          $ref: '#/components/schemas/KeywordDto[WorkflowAction]'
        sourceUrl:
          type: string
          description: URL to the source of the information for this item
        files:
          type: array
          description: "An array of files to attach to the item via a file transfer.\r\
            \n<br />\r\nSUBMITTALS: This field is PROHIBITED (i.e., must be undefined,\
            \ null or empty) when \"status\" is \"expected\" or \"draft\".\r\n<br\
            \ />\r\nRFI: OPTIONAL"
          items:
            $ref: '#/components/schemas/RemoteFileDto'
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        remarks:
          type: string
          description: Remarks about the project item
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    KeywordDto[WorkflowAction]:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: "Represents the default or user defined name of the keyword.\r\
            \nThis corresponds to the Project Center keyword list dialog's \"Name\"\
            \ column."
        type:
          type: string
          description: "Represents the type of the keyword.\r\nThis corresponds to\
            \ the Project Center keyword list dialog's \"Type\" column."
          enum:
          - close
          - close_approve
          - close_no_action_taken
          - close_rejected
          - final_receive
          - forward
          - receive
          - record_response
          - reopen
          - respond_and_close_approve
          - respond_and_close_no_action_taken
          - respond_and_close_rejected
          - respond_and_close_resubmit
          - send
          - send_and_close
          - send_and_close_approve
          - BasicTransmittalOutgoing
    RemoteFileDto:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: Absolute url to the file. The file must be publicly accessible
            without authorization
        name:
          type: string
          description: File name to be used when the file is downloaded.
      description: DTO for files located by a url
    RfiDto:
      required:
      - id
      - number
      - subject
      type: object
      properties:
        toContactIds:
          type: array
          description: Recipients
          items:
            type: string
        fromContactId:
          type: string
          description: Contact who sent the item
        remarks:
          type: string
          description: Remarks about the project item
        transmittalIds:
          type: array
          description: The transmittal identifiers associated with this item
          items:
            type: string
        senderId:
          type: string
          description: The sender's ID
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        id:
          type: string
          description: The GUID of the project item
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        relatedFiles:
          type: array
          description: Project files associated with this project item.
          items:
            $ref: '#/components/schemas/RelatedFileDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        relatedItems:
          type: array
          description: "Optional. If the Transmitalll is the issuance of record document\
            \ then this will contain\r\n the record document revision Id. In the future\
            \ this may handle additional use cases."
          items:
            $ref: '#/components/schemas/RelatedItemDto'
    GenericReopenDto:
      required:
      - contactId
      - reason
      type: object
      properties:
        contactId:
          type: string
          description: Contact who is reopening the item
        reason:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        remarks:
          type: string
          description: Remarks about the workflow action item
    GenericExternalWorkflowDto:
      required:
      - event
      type: object
      properties:
        event:
          type: string
          description: the event to add to the change log
        message:
          type: string
          description: The associated message, mandatory when event = error, otherwise
            optional
    SearchRequestDto:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/SearchProjectDto'
        requestedProperties:
          type: array
          items:
            type: string
            enum:
            - cts_key
            - file_key
            - cross_reference
            - reference
            - entry_path
            - filter_result
            - filter_reason
            - filter_time
            - filter_timespan
            - image_application_name
            - image_author
            - image_camera_manufacturer
            - image_camera_model
            - image_comment
            - image_copyright
            - image_date_taken
            - image_format
            - image_keywords
            - image_location
            - image_rating
            - image_subject
            - image_title
            - image_pixel_dimensions
            - image_bits_per_pixel
            - edms_plugin_config_id
            - edms_provider_id
            - file_directory
            - file_name
            - file_path
            - file_size
            - file_system_attributes
            - file_write_time
            - file_create_time
            - file_content
        previewPrefix:
          type: string
        previewSuffix:
          type: string
        resultsLimitType:
          type: string
          enum:
          - default
          - none
          - user_specified
        resultsLimit:
          type: integer
          format: int32
        paging:
          $ref: '#/components/schemas/PagingRequest'
        contentPhrase:
          type: string
        fileNamePhrase:
          type: string
    SearchProjectDto:
      type: object
      properties:
        id:
          type: string
        folders:
          type: array
          items:
            $ref: '#/components/schemas/EdmsObjectIdDto'
    PagedResponseDto[SearchResponseDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/SearchResponseDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    SearchResponseDto:
      type: object
      properties:
        previews:
          type: array
          items:
            $ref: '#/components/schemas/PropertyPreviewPair'
        properties:
          type: object
          properties:
            cts_key:
              type: object
              properties: {}
            file_key:
              type: object
              properties: {}
            cross_reference:
              type: object
              properties: {}
            reference:
              type: object
              properties: {}
            entry_path:
              type: object
              properties: {}
            filter_result:
              type: object
              properties: {}
            filter_reason:
              type: object
              properties: {}
            filter_time:
              type: object
              properties: {}
            filter_timespan:
              type: object
              properties: {}
            image_application_name:
              type: object
              properties: {}
            image_author:
              type: object
              properties: {}
            image_camera_manufacturer:
              type: object
              properties: {}
            image_camera_model:
              type: object
              properties: {}
            image_comment:
              type: object
              properties: {}
            image_copyright:
              type: object
              properties: {}
            image_date_taken:
              type: object
              properties: {}
            image_format:
              type: object
              properties: {}
            image_keywords:
              type: object
              properties: {}
            image_location:
              type: object
              properties: {}
            image_rating:
              type: object
              properties: {}
            image_subject:
              type: object
              properties: {}
            image_title:
              type: object
              properties: {}
            image_pixel_dimensions:
              type: object
              properties: {}
            image_bits_per_pixel:
              type: object
              properties: {}
            edms_plugin_config_id:
              type: object
              properties: {}
            edms_provider_id:
              type: object
              properties: {}
            file_directory:
              type: object
              properties: {}
            file_name:
              type: object
              properties: {}
            file_path:
              type: object
              properties: {}
            file_size:
              type: object
              properties: {}
            file_system_attributes:
              type: object
              properties: {}
            file_write_time:
              type: object
              properties: {}
            file_create_time:
              type: object
              properties: {}
            file_content:
              type: object
              properties: {}
    PropertyPreviewPair:
      type: object
      properties:
        property:
          type: string
          enum:
          - cts_key
          - file_key
          - cross_reference
          - reference
          - entry_path
          - filter_result
          - filter_reason
          - filter_time
          - filter_timespan
          - image_application_name
          - image_author
          - image_camera_manufacturer
          - image_camera_model
          - image_comment
          - image_copyright
          - image_date_taken
          - image_format
          - image_keywords
          - image_location
          - image_rating
          - image_subject
          - image_title
          - image_pixel_dimensions
          - image_bits_per_pixel
          - edms_plugin_config_id
          - edms_provider_id
          - file_directory
          - file_name
          - file_path
          - file_size
          - file_system_attributes
          - file_write_time
          - file_create_time
          - file_content
        preview:
          type: string
    CreateSpaceDto:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        name:
          type: string
        number:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
    SpaceFilterRequestDto:
      type: object
      properties:
        spaceId:
          type: string
          description: Identifies the space (GUID).
        name:
          type: string
          description: Identifies the space name.
        number:
          type: string
          description: Identifies the space number .
        paging:
          $ref: '#/components/schemas/PagingRequest'
        isDataFilter:
          type: boolean
          description: If filtering based on Name or Number
          readOnly: true
    FilterResponseDto[SpaceItemDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/SpaceItemDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    SpaceItemDto:
      type: object
      properties:
        projectId:
          type: string
          description: Identifies the project (GUID).
        spaceId:
          type: string
          description: Identifies the space (GUID).
        name:
          type: string
          description: Identifies the space name.
        number:
          type: string
          description: Identifies the space number .
        lastModifiedDateUTC:
          type: string
          description: Identifies the last modified date in UTC format.
        description:
          type: string
          description: Identifies the description.
        keywords:
          type: array
          description: Identifies the keywords.
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    ModifySpaceDto:
      type: object
      properties:
        name:
          type: string
          description: name of the space
        number:
          type: string
          description: number of the sapce
        description:
          type: string
          description: description of the space
        keywords:
          type: array
          description: defines the keywords
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
    ForbiddenException:
      type: object
      properties:
        message:
          type: string
          readOnly: true
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        innerException:
          type: object
          properties: {}
          readOnly: true
        stackTrace:
          type: string
          readOnly: true
        helpLink:
          type: string
        source:
          type: string
        hResult:
          type: integer
          format: int32
          readOnly: true
    FilterResponseDto[SubmittalReferenceDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/SubmittalReferenceDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    SubmittalReferenceDto:
      required:
      - id
      - number
      - subject
      type: object
      properties:
        transmittalIds:
          type: array
          description: The transmittal identifiers associated with this item
          items:
            type: string
        senderId:
          type: string
          description: The sender's ID
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        id:
          type: string
          description: The GUID of the project item
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        relatedFiles:
          type: array
          description: Project files associated with this project item.
          items:
            $ref: '#/components/schemas/RelatedFileDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        relatedItems:
          type: array
          description: "Optional. If the Transmitalll is the issuance of record document\
            \ then this will contain\r\n the record document revision Id. In the future\
            \ this may handle additional use cases."
          items:
            $ref: '#/components/schemas/RelatedItemDto'
    CreateSubmittalDto:
      required:
      - status
      - subject
      type: object
      properties:
        expectedDate:
          type: string
          description: "The date when the anticipated incoming submittal is (or was)\
            \ due to arrive.\r\nThis field is REQUIRED WHEN \"status\" is \"expected\"\
            , otherwise it is PROHIBITED  (i.e., must be undefined or null).\r\nFormat\
            \ is ISO 8601, that is, \"yyyy-mm-dd\"."
          format: date
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        senderId:
          type: string
          description: "The sender's ID must be in the form of a Guid\r\n<br />\r\n\
            SUBMITTALS: REQUIRED EXCEPT for  when \"status\" is \"expected\" or \"\
            draft\".\r\n<br />\r\nSUBMITTALS: This field is PROHIBITED (i.e., must\
            \ be undefined, null or empty) when \"status\" is \"expected\" or \"draft\"\
            \r\n<br />\r\nRFI: REQUIRED"
        toContactIds:
          type: array
          description: "Contact id(s) of those who the item is being sent. Id(s) must\
            \ be in the form of a Guid\r\n<br />\r\nSUBMITTALS: This field is REQUIRED\
            \ EXCEPT when \"status\" is \"expected\" or \"draft\", otherwise it is\
            \ optional.\r\n<br />\r\nRFI: REQUIRED"
          items:
            type: string
        fromContactId:
          type: string
          description: "Contact id of the person who sent the item. Id must be in\
            \ the form of a Guid\r\n<br />\r\nSUBMITTALS: This field is REQUIRED EXCEPT\
            \ when \"status\" is \"expected\" or \"draft\", otherwise it is optional.\r\
            \n<br />\r\nRFI: REQUIRED"
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        action:
          $ref: '#/components/schemas/KeywordDto[WorkflowAction]'
        sourceUrl:
          type: string
          description: URL to the source of the information for this item
        files:
          type: array
          description: "An array of files to attach to the item via a file transfer.\r\
            \n<br />\r\nSUBMITTALS: This field is PROHIBITED (i.e., must be undefined,\
            \ null or empty) when \"status\" is \"expected\" or \"draft\".\r\n<br\
            \ />\r\nRFI: OPTIONAL"
          items:
            $ref: '#/components/schemas/RemoteFileDto'
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        remarks:
          type: string
          description: Remarks about the project item
        source:
          $ref: '#/components/schemas/SourceInfoDto'
    SubmittalDto:
      required:
      - id
      - number
      - subject
      type: object
      properties:
        expectedDate:
          type: string
          description: "The date when the anticipated incoming submittal is (or was)\
            \ due to arrive.\r\nFormat is ISO 8601, that is, \"yyyy-mm-dd\"."
          format: date
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        toContactIds:
          type: array
          description: Recipients
          items:
            type: string
        fromContactId:
          type: string
          description: Contact who sent the item
        remarks:
          type: string
          description: Remarks about the project item
        transmittalIds:
          type: array
          description: The transmittal identifiers associated with this item
          items:
            type: string
        senderId:
          type: string
          description: The sender's ID
        status:
          $ref: '#/components/schemas/KeywordDto[WorkflowStatus]'
        id:
          type: string
          description: The GUID of the project item
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        relatedFiles:
          type: array
          description: Project files associated with this project item.
          items:
            $ref: '#/components/schemas/RelatedFileDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        relatedItems:
          type: array
          description: "Optional. If the Transmitalll is the issuance of record document\
            \ then this will contain\r\n the record document revision Id. In the future\
            \ this may handle additional use cases."
          items:
            $ref: '#/components/schemas/RelatedItemDto'
    TransmittalDetailsDto:
      required:
      - action
      - creationDate
      - dueDate
      - fromContactId
      - id
      - number
      - subject
      - toContactIds
      - via
      type: object
      properties:
        action:
          $ref: '#/components/schemas/KeywordDto[DBTransmittalActionType]'
        creationDate:
          type: string
          description: Transmittal date, no time included
          format: date
        fromContactId:
          type: string
          description: The from contact that originated the related project item.
        toContactIds:
          type: array
          description: A list of the contact IDs of the recipient.
          items:
            type: string
        dueDate:
          type: string
          description: The due date, no time included
          format: date
        via:
          $ref: '#/components/schemas/ViaDto'
        remarks:
          type: string
          description: Remarks about the project item
        id:
          type: string
          description: The GUID of the project item
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subject:
          type: string
          description: The subject of the project item (plain text)
        number:
          type: string
          description: The free-form identifier assigned to the project item (plain
            text)
        relatedFiles:
          type: array
          description: Project files associated with this project item.
          items:
            $ref: '#/components/schemas/RelatedFileDto'
        source:
          $ref: '#/components/schemas/SourceInfoDto'
        relatedItems:
          type: array
          description: "Optional. If the Transmitalll is the issuance of record document\
            \ then this will contain\r\n the record document revision Id. In the future\
            \ this may handle additional use cases."
          items:
            $ref: '#/components/schemas/RelatedItemDto'
    TransmittalFilterRequestDto:
      type: object
      properties:
        relatedItemTypeFilter:
          type: string
          enum:
          - ProjectItemToIssue
        lastModifiedUtc:
          type: string
          format: date-time
        paging:
          $ref: '#/components/schemas/PagingRequest'
    FilterResponseDto[TransmittalDetailsDto]:
      type: object
      properties:
        items:
          type: array
          description: The filtered list of items requested
          items:
            $ref: '#/components/schemas/TransmittalDetailsDto'
        offsetToken:
          type: string
          description: The token to supply in the next request to retrieve the next
            page of items
        remainingItems:
          type: integer
          description: The number of items remaining that can be requested. 0 means
            there are no more items
          format: int32
    Contact:
      type: object
      properties:
        id:
          type: string
          description: Unique ID (Guid) of the contact
        emailAddress:
          type: string
          description: Email address
        firstName:
          type: string
          description: First name, which may be given name or family name
        lastName:
          type: string
          description: Last name, which may be given name or family name
        phoneNumber:
          type: string
          description: Phone number
        companyName:
          type: string
          description: Company name
      description: Contact information
    NewformaVersionInfo:
      type: object
      properties:
        newformaApiVersion:
          type: string
        newformaApiCompatibilityNumber:
          type: string
        npcsVersion:
          type: string
        npcsCompatibilityNumber:
          type: string
        coreVersion:
          type: string
        apiVersion:
          type: string
        customerId:
          type: string
        machineName:
          type: string
        enterpriseApisEnabled:
          type: string
    ModifyPunchListItemDtoExample:
      type: object
      properties:
        spaceId:
          type: string
          description: Its value must exist in the project spaces
        id:
          type: string
          description: The ID number of the punch list. If value is not provided and
            is not required in the project it will work as autonumber and pick the
            first available value in the project. Null or empty values for either
            name or type are not accepted and will result in bad request
        type:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        location:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        element:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        description:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        assignedTo:
          type: array
          description: The project team members the punch list item is assigned to.
            Please provide guid values of contacts you wish to assign the punch list
            item to
          items:
            type: string
        capturedBy:
          type: string
          description: The contact who created the punch list item. Please provide
            guid values of contact you wish to mark as the one who captured the punch
            list item
        members:
          type: array
          description: The project team members involved with the punch list. Please
            provide guid values of contacts you wish to make mambers of the punch
            list item
          items:
            type: string
        dueDate:
          type: string
          description: The date the punch list item is due to be resolved. Please
            provide a date in ISO-8601 format. Dates in any other format are invalid.
            It's the punch list item due date.
        date:
          type: string
          description: The date the punch list item was captured. Please provide a
            date in ISO-8601 format. Dates in any other format are invalid. It's the
            punch list item date
        specSection:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        discipline:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        purpose:
          $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        status:
          $ref: '#/components/schemas/KeywordDto[PunchlistItemStatus]'
        keywords:
          type: array
          description: Any keywords applied to the punch list item. It's an array
            of keywords. Only generic type is accepted. Null or empty values for either
            name or type are not accepted and will result in bad request
          items:
            $ref: '#/components/schemas/KeywordDto[GenericKeyword]'
        remarks:
          type: string
          description: Those are remarks for the punch list item.
